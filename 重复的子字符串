// https://leetcode.cn/problems/repeated-substring-pattern/
class Solution {
    // 思路：尝试子串长度从1开始递增，如果s长度可以被子串长度整除，那么把子串拼接多次，是否等于s
    // 一直尝试到子串长度到(s.length() / 2 + 1)，还没找到那就是不可能存在
    public boolean repeatedSubstringPattern(String s) {
        if (s == null || s.length() < 2) {
            return false;
        }
        // i表示子字符串长度
        for (int i = 1; i < (s.length() / 2 + 1); i++) {
            if (s.length() % i != 0) {
                continue;
            }
            int beishu = s.length() / i;
            String tmp = "";
            for (int j = 0; j < beishu; j++) {
                tmp += s.substring(0, i);
            }
            if (tmp.equals(s)) {
                return true;
            }
        }
        return false;
    }
}
