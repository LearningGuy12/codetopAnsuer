//20. 有效的括号
//https://leetcode.cn/problems/valid-parentheses/description/

class Solution {
    static Set<Character> Left = new HashSet();
    static {
        Left.add('(');
        Left.add('{');
        Left.add('[');
    }
    static Set<Character> Right = new HashSet();
    static {
        Right.add(')');
        Right.add('}');
        Right.add(']');
    }

    /**
      利用栈，如果出现左括号入栈；出现右括号出栈，进行比对是否匹配。
      左[ 右]认为匹配，否则不符合要求
     */   
    public boolean isValid(String s) {
        if (s == null || s.length() == 0) {
            return false;
        }
        Stack<Character> stack = new Stack();
        for (int i = 0; i < s.length(); i++) {
            Character c = s.charAt(i);
            if (Left.contains(c)) {
                stack.add(c);
            } else if (Right.contains(c)) {
                if(stack.isEmpty){
                    // 保护逻辑，防止出现类似"]"这样的case
                    return false;
                }
                Character p = stack.pop();
                if (!match(p, c)) {
                    return false;
                }
            } else {
                return false;
            }
        }
        return stack.isEmpty();
    }

    boolean match(Character c1, Character c2) {
        if (c1 == '(' && c2 == ')') {
            return true;
        }
        if (c1 == '[' && c2 == ']') {
            return true;
        }
        if (c1 == '{' && c2 == '}') {
            return true;
        }
        return false;
    }
}
